// <auto-generated />
using System;
using DatabaseCustomActions.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DatabaseCustomActions.Migrations
{
    [DbContext(typeof(microteldbContext))]
    [Migration("20210913043948_Intial")]
    partial class Intial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DatabaseCustomActions.Models.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal>("Amount")
                        .HasColumnType("money")
                        .HasColumnName("amount");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("date")
                        .HasColumnName("dueDate");

                    b.Property<int>("IsPaid")
                        .HasColumnType("int")
                        .HasColumnName("isPaid");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("phoneNumber");

                    b.Property<Guid?>("TeirId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("teirID");

                    b.HasKey("Id");

                    b.HasIndex("PhoneNumber");

                    b.HasIndex("TeirId");

                    b.ToTable("bill");
                });

            modelBuilder.Entity("DatabaseCustomActions.Models.ExtraPackage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<Guid?>("ExtraPackageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("extraPackageID");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("phoneNumber");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("money")
                        .HasColumnName("totalPrice");

                    b.HasKey("Id");

                    b.HasIndex("ExtraPackageId");

                    b.HasIndex("PhoneNumber");

                    b.ToTable("extra_package");
                });

            modelBuilder.Entity("DatabaseCustomActions.Models.ExtraPackageDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("Megabytes")
                        .HasColumnType("int")
                        .HasColumnName("megabytes");

                    b.Property<int?>("Messages")
                        .HasColumnType("int")
                        .HasColumnName("messages");

                    b.Property<int?>("Minutes")
                        .HasColumnType("int")
                        .HasColumnName("minutes");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("name");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.ToTable("extra_package_details");
                });

            modelBuilder.Entity("DatabaseCustomActions.Models.Line", b =>
                {
                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("phoneNumber");

                    b.Property<Guid?>("QuotaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("quotaID");

                    b.Property<Guid?>("TierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("tierID");

                    b.HasKey("PhoneNumber")
                        .HasName("PK__line__4849DA00D9319AD2");

                    b.HasIndex("TierId");

                    b.HasIndex(new[] { "QuotaId" }, "UQ__line__DC48C72302D65AAF")
                        .IsUnique()
                        .HasFilter("[quotaID] IS NOT NULL");

                    b.ToTable("line");
                });

            modelBuilder.Entity("DatabaseCustomActions.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal>("Amount")
                        .HasColumnType("money")
                        .HasColumnName("amount");

                    b.Property<Guid?>("BillId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("billID");

                    b.Property<string>("CreditCard")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creditCard");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.ToTable("payment");
                });

            modelBuilder.Entity("DatabaseCustomActions.Models.Quotum", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("RemainingMegabytes")
                        .HasColumnType("int")
                        .HasColumnName("remainingMegabytes");

                    b.Property<int>("RemainingMessages")
                        .HasColumnType("int")
                        .HasColumnName("remainingMessages");

                    b.Property<int>("RemainingMinutes")
                        .HasColumnType("int")
                        .HasColumnName("remainingMinutes");

                    b.HasKey("Id");

                    b.ToTable("quota");
                });

            modelBuilder.Entity("DatabaseCustomActions.Models.TierDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("Megabytes")
                        .HasColumnType("int")
                        .HasColumnName("megabytes");

                    b.Property<int>("Messages")
                        .HasColumnType("int")
                        .HasColumnName("messages");

                    b.Property<int>("Minutes")
                        .HasColumnType("int")
                        .HasColumnName("minutes");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.ToTable("tier_details");
                });

            modelBuilder.Entity("DatabaseCustomActions.Models.User", b =>
                {
                    b.Property<int>("NationalId")
                        .HasColumnType("int")
                        .HasColumnName("nationalID");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birthDate");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("country");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fName");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lName");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("streetName");

                    b.Property<int>("StreetNo")
                        .HasColumnType("int")
                        .HasColumnName("streetNo");

                    b.Property<DateTime?>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timestamp")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("NationalId")
                        .HasName("PK__user__B5881E89094FFD8D");

                    b.HasIndex("PhoneNumber");

                    b.ToTable("user");
                });

            modelBuilder.Entity("DatabaseCustomActions.Models.Bill", b =>
                {
                    b.HasOne("DatabaseCustomActions.Models.Line", "PhoneNumberNavigation")
                        .WithMany("Bills")
                        .HasForeignKey("PhoneNumber")
                        .HasConstraintName("FK__bill__phoneNumbe__09746778");

                    b.HasOne("DatabaseCustomActions.Models.TierDetail", "Teir")
                        .WithMany("Bills")
                        .HasForeignKey("TeirId")
                        .HasConstraintName("FK__bill__teirID__0B5CAFEA");

                    b.Navigation("PhoneNumberNavigation");

                    b.Navigation("Teir");
                });

            modelBuilder.Entity("DatabaseCustomActions.Models.ExtraPackage", b =>
                {
                    b.HasOne("DatabaseCustomActions.Models.ExtraPackageDetail", "ExtraPackageNavigation")
                        .WithMany("ExtraPackages")
                        .HasForeignKey("ExtraPackageId")
                        .HasConstraintName("FK__ExtraPack__extra__540C7B00");

                    b.HasOne("DatabaseCustomActions.Models.Line", "PhoneNumberNavigation")
                        .WithMany("ExtraPackages")
                        .HasForeignKey("PhoneNumber")
                        .HasConstraintName("FK__ExtraPack__phone__531856C7");

                    b.Navigation("ExtraPackageNavigation");

                    b.Navigation("PhoneNumberNavigation");
                });

            modelBuilder.Entity("DatabaseCustomActions.Models.Line", b =>
                {
                    b.HasOne("DatabaseCustomActions.Models.Quotum", "Quota")
                        .WithOne("Line")
                        .HasForeignKey("DatabaseCustomActions.Models.Line", "QuotaId")
                        .HasConstraintName("FK__line__quotaID__43D61337");

                    b.HasOne("DatabaseCustomActions.Models.TierDetail", "Tier")
                        .WithMany("Lines")
                        .HasForeignKey("TierId")
                        .HasConstraintName("FK__line__tierID__42E1EEFE");

                    b.Navigation("Quota");

                    b.Navigation("Tier");
                });

            modelBuilder.Entity("DatabaseCustomActions.Models.Payment", b =>
                {
                    b.HasOne("DatabaseCustomActions.Models.Bill", "Bill")
                        .WithMany("Payments")
                        .HasForeignKey("BillId")
                        .HasConstraintName("FK__payment__billID__0F2D40CE");

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("DatabaseCustomActions.Models.User", b =>
                {
                    b.HasOne("DatabaseCustomActions.Models.Line", "PhoneNumberNavigation")
                        .WithMany("Users")
                        .HasForeignKey("PhoneNumber")
                        .HasConstraintName("FK__user__phoneNumbe__6EC0713C");

                    b.Navigation("PhoneNumberNavigation");
                });

            modelBuilder.Entity("DatabaseCustomActions.Models.Bill", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("DatabaseCustomActions.Models.ExtraPackageDetail", b =>
                {
                    b.Navigation("ExtraPackages");
                });

            modelBuilder.Entity("DatabaseCustomActions.Models.Line", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("ExtraPackages");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("DatabaseCustomActions.Models.Quotum", b =>
                {
                    b.Navigation("Line");
                });

            modelBuilder.Entity("DatabaseCustomActions.Models.TierDetail", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Lines");
                });
#pragma warning restore 612, 618
        }
    }
}
